@page "/pizzacrust"
@rendermode InteractiveServer

<div class="container">
    <h3 class="my-3">Pizza Crust</h3>

    <div class="form-check">
        <input class="form-check-input" type="radio" name="crustSelection" value="Thin" @onchange="@(() => UpdateCrustSelection("Thin"))" id="thin">
        <label class="form-check-label" for="thin">
            Thin - $5.99
        </label>
    </div>

    <div class="form-check">
        <input class="form-check-input" type="radio" name="crustSelection" value="Pan" @onchange="@(() => UpdateCrustSelection("Pan"))" id="pan">
        <label class="form-check-label" for="pan">
            Pan - $7.99
        </label>
    </div>

    <div class="form-check">
        <input class="form-check-input" type="radio" name="crustSelection" value="Hand" @onchange="@(() => UpdateCrustSelection("Hand"))" id="hand">
        <label class="form-check-label" for="hand">
            Hand Tossed - $6.99
        </label>
    </div>

    <p class="my-3">Selected Crust: @GetSelectedCrustType()</p>
    <p class="fw-bold">Crust Price: @selectedCrust.CrustPrice().ToString("C")</p>
</div>

@code {
	
    [Parameter]
    public Crust selectedCrust { get; set; } = new Crust();
    
    [Parameter]
    public EventCallback<Crust> OnCrustChanged { get; set; }

    private async Task UpdateCrustSelection(string crustType)
    {
        switch (crustType)
        {
            case "Thin":
                selectedCrust.Thin = true;
                selectedCrust.Pan = false;
                selectedCrust.Hand = false;
                break;
            case "Pan":
                selectedCrust.Thin = false;
                selectedCrust.Pan = true;
                selectedCrust.Hand = false;
                break;
            case "Hand":
                selectedCrust.Thin = false;
                selectedCrust.Pan = false;
                selectedCrust.Hand = true;
                break;
        }
        await OnCrustChanged.InvokeAsync(selectedCrust);
    }

    private string GetSelectedCrustType()
    {
        if (selectedCrust.Thin) { return "Thin"; }
        else if (selectedCrust.Pan) { return "Pan"; }
        else if (selectedCrust.Hand) { return "Hand Tossed"; }
        return "None";
    }
}
